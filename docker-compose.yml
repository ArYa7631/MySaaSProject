version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mysaasproject_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/mysaasproject_development
      RAILS_ENV: development
      JWT_SECRET_KEY: your_jwt_secret_key_here
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app
      - /app/tmp
      - /app/log
    command: ./bin/rails server -b 0.0.0.0 -p 3001

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/apps/frontend/node_modules
      - /app/apps/frontend/.next
    depends_on:
      - backend
    command: yarn workspace @mysaasproject/frontend dev

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:


